#! /usr/bin/env perl

use strict;
use warnings;
use utf8;
use Hydra::Plugin;
use Hydra::Schema;
use Hydra::Helper::Nix;
use Hydra::Helper::AddBuilds;
use Hydra::Model::DB;
use Getopt::Long qw(:config gnu_getopt);

sub showHelp {
    print <<EOF;
Usage: $0 PROJECT JOBSET
  [--trigger] [--force]
  [--hidden] [--disabled]
  [--description DESCRIPTION]
  [--url URL]
  [--ref REF]
  [--nixexpr-path PATH]
EOF
    exit 0;
}

my ($triggerEval, $forceEval, $description, $nixpkgsUrl, $nixpkgsRef, $nixexprPath, $hidden, $disabled);

GetOptions("trigger" => \$triggerEval,
           "force" => \$forceEval,
           "description=s" => \$description,
           "url=s" => \$nixpkgsUrl,
           "ref=s" => \$nixpkgsRef,
           "nixexpr-path=s" => \$nixexprPath,
           "hidden" => \$hidden,
           "disabled" => \$disabled,
           "help" => sub { showHelp() }
    ) or exit 1;

die "$0: project and jobset name required\n" if @ARGV < 2;
my $projectName = $ARGV[0];
my $jobsetName = $ARGV[1];

$description = "" unless $description;
$nixpkgsUrl = "https://github.com/NixOS/nixpkgs.git" unless $nixpkgsUrl;
$nixpkgsRef = "master" unless $nixpkgsRef;
$nixexprPath = "nixos/release-combined.nix" unless $nixexprPath;

# TODO
my $dryRun = defined $ENV{'HYDRA_DRY_RUN'};

my $db = Hydra::Model::DB->new();
my $config = getHydraConfig();

txn_do($db, sub {
    my $project = $db->resultset('Projects')->find({ name => $projectName });
    my $jobset = $project->jobsets->update_or_create(
      { name => $jobsetName, description => $description,
        nixexprinput => "nixpkgs",
        nixexprpath => $nixexprPath,
        enabled => $disabled ? 0 : 1, checkinterval => 0, emailoverride => "",
        enableemail => 0, hidden => $hidden ? 1 : 0
      });

    if ($jobset->jobsetinputs->count == 0) {
      my $jobsetinput;
      my $jobsetinputals;
      my $jobsetinput_supported;
      my $jobsetinputals_supported;
      $jobsetinput = $jobset->jobsetinputs->create({name => "nixpkgs", type => "git"});
      $jobsetinputals = $jobsetinput->jobsetinputalts->create({altnr => 0, value => "$nixpkgsUrl $nixpkgsRef"});
    }

    if ($triggerEval) {
      $jobset->update({ triggertime => time });
      $jobset->update({ forceeval => 1 }) if $forceEval;
    }
  });

print getBaseUrl($config) . "/jobset/$projectName/$jobsetName";
